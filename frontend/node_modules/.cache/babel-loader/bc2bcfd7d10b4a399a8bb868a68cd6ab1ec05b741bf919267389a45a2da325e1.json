{"ast":null,"code":"var _jsxFileName = \"/Users/mohamedfadhil/mernProject/frontend/src/components/ProductForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useProductsContext } from \"../hooks/useProductsContext\";\nimport { useNavigate } from \"react-router-dom\";\n\n// import { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductForm = () => {\n  _s();\n  const {\n    dispatch\n  } = useProductsContext();\n  const navigate = useNavigate(); // Hook for programmatic navigation\n\n  const [name, setName] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [supplier, setSupplier] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [quantity, setQuantity] = useState(\"\");\n  const [reOrderLevel, setReOrderLevel] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n\n  //for error checking\n  const [error, setError] = useState([]);\n  const [emptyFields, setEmptyFields] = useState([]);\n\n  // const [suppliersList, setSuppliersList] = useState([]);\n\n  // useEffect(() => {\n  //   // Fetch the list of suppliers from your API\n  //   const fetchSuppliers = async () => {\n  //     try {\n  //       const response = await fetch('/api/suppliers');                      //when supplier data is added\n  //       const data = await response.json();\n\n  //       if (response.ok) {\n  //         // Extract the list of supplier names\n  //         const supplierNames = data.map((supplier) => supplier.name);\n  //         setSuppliersList(supplierNames);\n  //       } else {\n  //         console.error('Failed to fetch suppliers');\n  //       }\n  //     } catch (error) {\n  //       console.error('Error fetching suppliers:', error);\n  //     }\n  //   };\n\n  //   fetchSuppliers();\n  // }, []);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!/^[a-zA-Z][a-zA-Z0-9\\s]*$/.test(name)) {\n      setError(\"Name must start with a letter and can only contain letters, numbers, and spaces.\");\n      return;\n    }\n    if (name.length <= 2) {\n      setError(\"Name must be greater than 2 letters.\");\n      return;\n    }\n    if (!/^[a-zA-Z][a-zA-Z0-9\\s]*$/.test(description)) {\n      setError(\"description must start with a letter and can only contain letters, numbers, and spaces\");\n      return;\n    }\n    const quantityVal = parseInt(quantity);\n    if (quantityVal <= 0) {\n      setError(\"Quantity must be a valid number greater than 0\");\n      return;\n    }\n    const reOrderLevelValue = parseFloat(reOrderLevel);\n    if (reOrderLevelValue <= 0 || reOrderLevelValue >= parseFloat(quantity)) {\n      setError(\"Re-Order Level must be a valid number greater than 0 and less than Quantity.\");\n      return;\n    }\n    const priceVal = parseFloat(price);\n    if (priceVal <= 0) {\n      setError(\"Price must be a valid number greater than 0\");\n      return;\n    }\n    const product = {\n      name,\n      category,\n      supplier,\n      description,\n      quantity,\n      reOrderLevel,\n      price\n    };\n    const response = await fetch(\"/api/products\", {\n      method: \"POST\",\n      body: JSON.stringify(product),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      setError(json.error);\n      setEmptyFields(json.emptyFields);\n    }\n    if (response.ok) {\n      setName(\"\");\n      setCategory(\"\");\n      setSupplier(\"\");\n      setDescription(\"\");\n      setQuantity(\"\");\n      setReOrderLevel(\"\");\n      setPrice(\"\");\n      setError(null);\n      setEmptyFields([]);\n      console.log(\"new product added\", json);\n      dispatch({\n        type: \"CREATE_PRODUCT\",\n        payload: json\n      });\n\n      // Redirect to the home page\n      navigate(\"/\");\n    }\n  };\n  return (\n    /*#__PURE__*/\n    //   <div className=\"form-container\">\n    //     <form className=\"format\" onSubmit={handleSubmit}>\n    //       <h3>Add a new Product</h3>\n    //       <label>Product Name :</label>\n    //       <input\n    //         type=\"text\"\n    //         onChange={(e) => setName(e.target.value)}\n    //         value={name}\n    //         className={emptyFields.includes(\"name\")||\n    //         (error && error.includes(\"name\")) ? \"error\" : \"\"}\n    //       />\n    //       {error && error.includes(\"name\") && (\n    //         <span className=\"error\">{error}</span>\n    //       )}\n    //       <label>Category :</label>\n    //       <input\n    //         type=\"text\"\n    //         onChange={(e) => setCategory(e.target.value)}\n    //         value={category}\n    //         className={emptyFields.includes(\"category\")||\n    //         (error && error.includes(\"category\")) ? \"error\" : \"\"}\n    //       />\n    //       <label>Supplier :</label>\n    //       <input\n    //         type=\"text\"\n    //         onChange={(e) => setSupplier(e.target.value)}\n    //         value={supplier}\n    //         className={emptyFields.includes(\"supplier\")||\n    //         (error && error.includes(\"supplier\")) ? \"error\" : \"\"}\n    //       />\n    //       {/* \n    //       <label>Supplier:</label>\n    //       <select\n    //         value={supplier}\n    //         onChange={(e) => setSupplier(e.target.value)}\n    //         className={emptyFields.includes('supplier') ? 'error' : ''}\n    //       >\n    //         <option value=\"\">Select Supplier</option>\n    //         {suppliersList.map((supplierName) => (\n    //           <option key={supplierName} value={supplierName}>\n    //             {supplierName}\n    //           </option>\n    //         ))}\n    //       </select> */}\n    //       <label>Description :</label>\n    //       <input\n    //         type=\"text\"\n    //         onChange={(e) => setDescription(e.target.value)}\n    //         value={description}\n    //         className={emptyFields.includes(\"description\")||\n    //         (error && error.includes(\"description\")) ? \"error\" : \"\"}\n    //       />\n    //       {error && error.includes(\"description\") && (\n    //         <span className=\"error\">{error}</span>\n    //       )}\n    //       <label>Quantity:</label>\n    //       <input\n    //         type=\"number\"\n    //         onChange={(e) => setQuantity(e.target.value)}\n    //         value={quantity}\n    //         className={\n    //           emptyFields.includes(\"quantity\") ||\n    //           (error && error.includes(\"quantity\"))\n    //             ? \"error\"\n    //             : \"\"\n    //         }\n    //       />\n    //       {emptyFields.includes(\"quantity\") && (\n    //         <span className=\"error\">Quantity Level is required.</span>\n    //       )}\n    //       {error && error.includes(\"quantity\") && (\n    //         <span className=\"error\">{error}</span>\n    //       )}\n    //       <label>Re-OrderLevel:</label>\n    //       <input\n    //         type=\"number\"\n    //         onChange={(e) => setReOrderLevel(e.target.value)}\n    //         value={reOrderLevel}\n    //         className={\n    //           emptyFields.includes(\"reOrderLevel\") ||\n    //           (error && error.includes(\"reOrderLevel\"))\n    //             ? \"error\"\n    //             : \"\"\n    //         }\n    //       />\n    //       {error && error.includes(\"reOrderLevel\") && (\n    //         <span className=\"error\">{error}</span>\n    //       )}\n    //       <label>Price:</label>\n    //       <input\n    //         type=\"number\"\n    //         onChange={(e) => setPrice(e.target.value)}\n    //         value={price}\n    //         className={emptyFields.includes(\"price\")||\n    //         (error && error.includes(\"price\")) ? \"error\" : \"\"}\n    //       />\n    //       <button>Add Product</button>\n    //       {error && <div className=\"error\">{error}</div>}\n    //     </form>\n    //   </div>\n    _jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"format\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Add a new Product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Product Name :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: e => setName(e.target.value),\n              value: name,\n              className: emptyFields.includes(\"name\") || error && error.includes(\"name\") ? \"error\" : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Category :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: e => setCategory(e.target.value),\n              value: category,\n              className: emptyFields.includes(\"category\") || error && error.includes(\"category\") ? \"error\" : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Description :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: e => setDescription(e.target.value),\n              value: description,\n              className: emptyFields.includes(\"description\") || error && error.includes(\"description\") ? \"error\" : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Supplier :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: e => setSupplier(e.target.value),\n              value: supplier,\n              className: emptyFields.includes(\"supplier\") || error && error.includes(\"supplier\") ? \"error\" : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Quantity:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              onChange: e => setQuantity(e.target.value),\n              value: quantity,\n              className: emptyFields.includes(\"quantity\") || error && error.includes(\"quantity\") ? \"error\" : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Re-OrderLevel:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              onChange: e => setReOrderLevel(e.target.value),\n              value: reOrderLevel,\n              className: emptyFields.includes(\"reOrderLevel\") || error && error.includes(\"reOrderLevel\") ? \"error\" : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Price:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              onChange: e => setPrice(e.target.value),\n              value: price,\n              className: emptyFields.includes(\"price\") || error && error.includes(\"price\") ? \"error\" : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Add Product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 7\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 3\n    }, this)\n    // );\n  );\n};\n_s(ProductForm, \"V1Qxa82FbALoOLjGmVkDnW3QwX0=\", false, function () {\n  return [useProductsContext, useNavigate];\n});\n_c = ProductForm;\nexport default ProductForm;\nvar _c;\n$RefreshReg$(_c, \"ProductForm\");","map":{"version":3,"names":["useState","useProductsContext","useNavigate","jsxDEV","_jsxDEV","ProductForm","_s","dispatch","navigate","name","setName","category","setCategory","supplier","setSupplier","description","setDescription","quantity","setQuantity","reOrderLevel","setReOrderLevel","price","setPrice","error","setError","emptyFields","setEmptyFields","handleSubmit","e","preventDefault","test","length","quantityVal","parseInt","reOrderLevelValue","parseFloat","priceVal","product","response","fetch","method","body","JSON","stringify","headers","json","ok","console","log","type","payload","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","onChange","target","value","includes","_c","$RefreshReg$"],"sources":["/Users/mohamedfadhil/mernProject/frontend/src/components/ProductForm.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useProductsContext } from \"../hooks/useProductsContext\";\nimport { useNavigate } from \"react-router-dom\";\n\n// import { useEffect } from 'react';\n\nconst ProductForm = () => {\n  const { dispatch } = useProductsContext();\n  const navigate = useNavigate(); // Hook for programmatic navigation\n\n  const [name, setName] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [supplier, setSupplier] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [quantity, setQuantity] = useState(\"\");\n  const [reOrderLevel, setReOrderLevel] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n\n  //for error checking\n  const [error, setError] = useState([]);\n  const [emptyFields, setEmptyFields] = useState([]);\n\n  // const [suppliersList, setSuppliersList] = useState([]);\n\n  // useEffect(() => {\n  //   // Fetch the list of suppliers from your API\n  //   const fetchSuppliers = async () => {\n  //     try {\n  //       const response = await fetch('/api/suppliers');                      //when supplier data is added\n  //       const data = await response.json();\n\n  //       if (response.ok) {\n  //         // Extract the list of supplier names\n  //         const supplierNames = data.map((supplier) => supplier.name);\n  //         setSuppliersList(supplierNames);\n  //       } else {\n  //         console.error('Failed to fetch suppliers');\n  //       }\n  //     } catch (error) {\n  //       console.error('Error fetching suppliers:', error);\n  //     }\n  //   };\n\n  //   fetchSuppliers();\n  // }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!/^[a-zA-Z][a-zA-Z0-9\\s]*$/.test(name)) {\n      setError(\n        \"Name must start with a letter and can only contain letters, numbers, and spaces.\"\n      );\n      return;\n    }\n    if (name.length <= 2) {\n      setError(\"Name must be greater than 2 letters.\");\n      return;\n    }\n\n    if (!/^[a-zA-Z][a-zA-Z0-9\\s]*$/.test(description)) {\n      setError(\n        \"description must start with a letter and can only contain letters, numbers, and spaces\"\n      );\n      return;\n    }\n\n    const quantityVal = parseInt(quantity);\n    if (quantityVal <= 0) {\n      setError(\"Quantity must be a valid number greater than 0\");\n      return;\n    }\n    const reOrderLevelValue = parseFloat(reOrderLevel);\n    if (reOrderLevelValue <= 0 || reOrderLevelValue >= parseFloat(quantity)) {\n      setError(\n        \"Re-Order Level must be a valid number greater than 0 and less than Quantity.\"\n      );\n      return;\n    }\n    const priceVal = parseFloat(price);\n    if (priceVal <= 0) {\n      setError(\"Price must be a valid number greater than 0\");\n      return;\n    }\n\n    const product = {\n      name,\n      category,\n      supplier,\n      description,\n      quantity,\n      reOrderLevel,\n      price,\n    };\n\n    const response = await fetch(\"/api/products\", {\n      method: \"POST\",\n      body: JSON.stringify(product),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    const json = await response.json();\n\n    if (!response.ok) {\n      setError(json.error);\n      setEmptyFields(json.emptyFields);\n    }\n    if (response.ok) {\n      setName(\"\");\n      setCategory(\"\");\n      setSupplier(\"\");\n      setDescription(\"\");\n      setQuantity(\"\");\n      setReOrderLevel(\"\");\n      setPrice(\"\");\n      setError(null);\n      setEmptyFields([]);\n      console.log(\"new product added\", json);\n      dispatch({ type: \"CREATE_PRODUCT\", payload: json });\n\n      // Redirect to the home page\n      navigate(\"/\");\n    }\n  };\n\n  return (\n  //   <div className=\"form-container\">\n  //     <form className=\"format\" onSubmit={handleSubmit}>\n  //       <h3>Add a new Product</h3>\n\n  //       <label>Product Name :</label>\n  //       <input\n  //         type=\"text\"\n  //         onChange={(e) => setName(e.target.value)}\n  //         value={name}\n  //         className={emptyFields.includes(\"name\")||\n  //         (error && error.includes(\"name\")) ? \"error\" : \"\"}\n  //       />\n  //       {error && error.includes(\"name\") && (\n  //         <span className=\"error\">{error}</span>\n  //       )}\n\n  //       <label>Category :</label>\n  //       <input\n  //         type=\"text\"\n  //         onChange={(e) => setCategory(e.target.value)}\n  //         value={category}\n  //         className={emptyFields.includes(\"category\")||\n  //         (error && error.includes(\"category\")) ? \"error\" : \"\"}\n  //       />\n\n  //       <label>Supplier :</label>\n  //       <input\n  //         type=\"text\"\n  //         onChange={(e) => setSupplier(e.target.value)}\n  //         value={supplier}\n  //         className={emptyFields.includes(\"supplier\")||\n  //         (error && error.includes(\"supplier\")) ? \"error\" : \"\"}\n  //       />\n  //       {/* \n  //       <label>Supplier:</label>\n  //       <select\n  //         value={supplier}\n  //         onChange={(e) => setSupplier(e.target.value)}\n  //         className={emptyFields.includes('supplier') ? 'error' : ''}\n  //       >\n  //         <option value=\"\">Select Supplier</option>\n  //         {suppliersList.map((supplierName) => (\n  //           <option key={supplierName} value={supplierName}>\n  //             {supplierName}\n  //           </option>\n  //         ))}\n  //       </select> */}\n\n  //       <label>Description :</label>\n  //       <input\n  //         type=\"text\"\n  //         onChange={(e) => setDescription(e.target.value)}\n  //         value={description}\n  //         className={emptyFields.includes(\"description\")||\n  //         (error && error.includes(\"description\")) ? \"error\" : \"\"}\n  //       />\n  //       {error && error.includes(\"description\") && (\n  //         <span className=\"error\">{error}</span>\n  //       )}\n\n  //       <label>Quantity:</label>\n  //       <input\n  //         type=\"number\"\n  //         onChange={(e) => setQuantity(e.target.value)}\n  //         value={quantity}\n  //         className={\n  //           emptyFields.includes(\"quantity\") ||\n  //           (error && error.includes(\"quantity\"))\n  //             ? \"error\"\n  //             : \"\"\n  //         }\n  //       />\n  //       {emptyFields.includes(\"quantity\") && (\n  //         <span className=\"error\">Quantity Level is required.</span>\n  //       )}\n  //       {error && error.includes(\"quantity\") && (\n  //         <span className=\"error\">{error}</span>\n  //       )}\n\n  //       <label>Re-OrderLevel:</label>\n  //       <input\n  //         type=\"number\"\n  //         onChange={(e) => setReOrderLevel(e.target.value)}\n  //         value={reOrderLevel}\n  //         className={\n  //           emptyFields.includes(\"reOrderLevel\") ||\n  //           (error && error.includes(\"reOrderLevel\"))\n  //             ? \"error\"\n  //             : \"\"\n  //         }\n  //       />\n  //       {error && error.includes(\"reOrderLevel\") && (\n  //         <span className=\"error\">{error}</span>\n  //       )}\n\n  //       <label>Price:</label>\n  //       <input\n  //         type=\"number\"\n  //         onChange={(e) => setPrice(e.target.value)}\n  //         value={price}\n  //         className={emptyFields.includes(\"price\")||\n  //         (error && error.includes(\"price\")) ? \"error\" : \"\"}\n  //       />\n\n  //       <button>Add Product</button>\n  //       {error && <div className=\"error\">{error}</div>}\n  //     </form>\n  //   </div>\n  <div className=\"form-container\">\n    <form className=\"format\" onSubmit={handleSubmit}>\n      <h3>Add a new Product</h3>\n\n      <div className=\"form-row\">\n        <div className=\"form-column\">\n          <label>Product Name :</label>\n          <input\n            type=\"text\"\n            onChange={(e) => setName(e.target.value)}\n            value={name}\n            className={emptyFields.includes(\"name\") || (error && error.includes(\"name\")) ? \"error\" : \"\"}\n          />\n\n          <label>Category :</label>\n          <input\n            type=\"text\"\n            onChange={(e) => setCategory(e.target.value)}\n            value={category}\n            className={emptyFields.includes(\"category\") || (error && error.includes(\"category\")) ? \"error\" : \"\"}\n          />\n\n          <label>Description :</label>\n          <input\n            type=\"text\"\n            onChange={(e) => setDescription(e.target.value)}\n            value={description}\n            className={emptyFields.includes(\"description\") || (error && error.includes(\"description\")) ? \"error\" : \"\"}\n          />\n        </div>\n\n        <div className=\"form-column\">\n          <label>Supplier :</label>\n          <input\n            type=\"text\"\n            onChange={(e) => setSupplier(e.target.value)}\n            value={supplier}\n            className={emptyFields.includes(\"supplier\") || (error && error.includes(\"supplier\")) ? \"error\" : \"\"}\n          />\n\n          <label>Quantity:</label>\n          <input\n            type=\"number\"\n            onChange={(e) => setQuantity(e.target.value)}\n            value={quantity}\n            className={\n              emptyFields.includes(\"quantity\") || (error && error.includes(\"quantity\")) ? \"error\" : \"\"\n            }\n          />\n\n          <label>Re-OrderLevel:</label>\n          <input\n            type=\"number\"\n            onChange={(e) => setReOrderLevel(e.target.value)}\n            value={reOrderLevel}\n            className={\n              emptyFields.includes(\"reOrderLevel\") || (error && error.includes(\"reOrderLevel\")) ? \"error\" : \"\"\n            }\n          />\n\n          <label>Price:</label>\n          <input\n            type=\"number\"\n            onChange={(e) => setPrice(e.target.value)}\n            value={price}\n            className={emptyFields.includes(\"price\") || (error && error.includes(\"price\")) ? \"error\" : \"\"}\n          />\n        </div>\n      </div>\n\n      <button>Add Product</button>\n      {error && <div className=\"error\">{error}</div>}\n    </form>\n  </div>\n// );\n  );\n};\n\nexport default ProductForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}