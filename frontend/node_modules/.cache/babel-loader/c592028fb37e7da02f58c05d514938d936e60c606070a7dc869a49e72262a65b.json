{"ast":null,"code":"var _jsxFileName = \"/Users/mohamedfadhil/mernProject/frontend/src/components/ProductForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useProductsContext } from '../hooks/useProductsContext';\nimport { useNavigate } from 'react-router-dom';\n// import { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductForm = () => {\n  _s();\n  const {\n    dispatch\n  } = useProductsContext();\n  const navigate = useNavigate(); // Hook for programmatic navigation\n\n  const [name, setName] = useState('');\n  const [category, setCategory] = useState('');\n  const [supplier, setSupplier] = useState('');\n  const [description, setDescription] = useState('');\n  const [quantity, setQuantity] = useState('');\n  const [reOrderLevel, setReOrderLevel] = useState('');\n  const [price, setPrice] = useState('');\n\n  //for error checking \n  const [error, setErrors] = useState([]);\n  const [emptyFields, setEmptyFields] = useState([]);\n\n  // const [suppliersList, setSuppliersList] = useState([]);\n\n  // useEffect(() => {\n  //   // Fetch the list of suppliers from your API\n  //   const fetchSuppliers = async () => {\n  //     try {\n  //       const response = await fetch('/api/suppliers');                      //when supplier data is added \n  //       const data = await response.json();\n\n  //       if (response.ok) {\n  //         // Extract the list of supplier names\n  //         const supplierNames = data.map((supplier) => supplier.name);\n  //         setSuppliersList(supplierNames);\n  //       } else {\n  //         console.error('Failed to fetch suppliers');\n  //       }\n  //     } catch (error) {\n  //       console.error('Error fetching suppliers:', error);\n  //     }\n  //   };\n\n  //   fetchSuppliers();\n  // }, []);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setErrors([]);\n\n    // Validate the reOrderLevel\n    if (parseInt(reOrderLevel) <= 0) {\n      setErrors(prevErrors => [...prevErrors, 'Re-Order Level must be greater than 0']);\n    }\n    if (parseInt(reOrderLevel) >= parseInt(quantity)) {\n      setErrors(prevErrors => [...prevErrors, 'Re-Order Level must be less than Quantity']);\n    }\n\n    // If there are errors, stop form submission\n    if (errors.length > 0) {\n      return;\n    }\n    const product = {\n      name,\n      category,\n      supplier,\n      description,\n      quantity,\n      reOrderLevel,\n      price\n    };\n    const response = await fetch('/api/products', {\n      method: 'POST',\n      body: JSON.stringify(product),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      setError(json.error);\n      setEmptyFields(json.emptyFields);\n    }\n    if (response.ok) {\n      setName('');\n      setCategory('');\n      setSupplier('');\n      setDescription('');\n      setQuantity('');\n      setReOrderLevel('');\n      setPrice('');\n      setError(null);\n      setEmptyFields([]);\n      console.log('new product added', json);\n      dispatch({\n        type: 'CREATE_PRODUCT',\n        payload: json\n      });\n\n      // Redirect to the home page\n      navigate('/');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"format\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add a new Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Product Name :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setName(e.target.value),\n        value: name,\n        className: emptyFields.includes('name') ? 'error' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Category :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setCategory(e.target.value),\n        value: category,\n        className: emptyFields.includes('category') ? 'error' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Supplier :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setSupplier(e.target.value),\n        value: supplier,\n        className: emptyFields.includes('supplier') ? 'error' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Description :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setDescription(e.target.value),\n        value: description,\n        className: emptyFields.includes('description') ? 'error' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Quantity:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        onChange: e => setQuantity(e.target.value),\n        value: quantity,\n        className: emptyFields.includes('quantity') ? 'error' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Re-OrderLevel:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        onChange: e => setReOrderLevel(e.target.value),\n        value: reOrderLevel,\n        className: emptyFields.includes('reOrderLevel') ? 'error' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Price:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        onChange: e => setPrice(e.target.value),\n        value: price,\n        className: emptyFields.includes('price') ? 'error' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductForm, \"m3fExVHSoxw9wWzFj0f3eSbUlz4=\", false, function () {\n  return [useProductsContext, useNavigate];\n});\n_c = ProductForm;\nexport default ProductForm;\nvar _c;\n$RefreshReg$(_c, \"ProductForm\");","map":{"version":3,"names":["useState","useProductsContext","useNavigate","jsxDEV","_jsxDEV","ProductForm","_s","dispatch","navigate","name","setName","category","setCategory","supplier","setSupplier","description","setDescription","quantity","setQuantity","reOrderLevel","setReOrderLevel","price","setPrice","error","setErrors","emptyFields","setEmptyFields","handleSubmit","e","preventDefault","parseInt","prevErrors","errors","length","product","response","fetch","method","body","JSON","stringify","headers","json","ok","setError","console","log","type","payload","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","onChange","target","value","includes","_c","$RefreshReg$"],"sources":["/Users/mohamedfadhil/mernProject/frontend/src/components/ProductForm.js"],"sourcesContent":["import { useState } from 'react';\nimport { useProductsContext } from '../hooks/useProductsContext';\nimport { useNavigate } from 'react-router-dom';\n// import { useEffect } from 'react';\n\nconst ProductForm = () => {\n  const { dispatch } = useProductsContext();\n  const navigate = useNavigate(); // Hook for programmatic navigation\n\n  const [name, setName] = useState('');\n  const [category, setCategory] = useState('');\n  const [supplier, setSupplier] = useState('');\n  const [description, setDescription] = useState('');\n  const [quantity, setQuantity] = useState('');\n  const [reOrderLevel, setReOrderLevel] = useState('');\n  const [price, setPrice] = useState('');\n\n\n  //for error checking \n  const [error, setErrors] = useState([]);\n  const [emptyFields, setEmptyFields] = useState([]);\n\n  // const [suppliersList, setSuppliersList] = useState([]);\n\n  // useEffect(() => {\n  //   // Fetch the list of suppliers from your API\n  //   const fetchSuppliers = async () => {\n  //     try {\n  //       const response = await fetch('/api/suppliers');                      //when supplier data is added \n  //       const data = await response.json();\n\n  //       if (response.ok) {\n  //         // Extract the list of supplier names\n  //         const supplierNames = data.map((supplier) => supplier.name);\n  //         setSuppliersList(supplierNames);\n  //       } else {\n  //         console.error('Failed to fetch suppliers');\n  //       }\n  //     } catch (error) {\n  //       console.error('Error fetching suppliers:', error);\n  //     }\n  //   };\n\n  //   fetchSuppliers();\n  // }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    setErrors([]);\n\n    // Validate the reOrderLevel\n    if (parseInt(reOrderLevel) <= 0) {\n      setErrors((prevErrors) => [...prevErrors, 'Re-Order Level must be greater than 0']);\n    }\n\n    if (parseInt(reOrderLevel) >= parseInt(quantity)) {\n      setErrors((prevErrors) => [...prevErrors, 'Re-Order Level must be less than Quantity']);\n    }\n\n    // If there are errors, stop form submission\n    if (errors.length > 0) {\n      return;\n    }\n    const product = { name, category, supplier, description, quantity, reOrderLevel, price };\n\n    const response = await fetch('/api/products', {\n      method: 'POST',\n      body: JSON.stringify(product),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    const json = await response.json();\n\n    if (!response.ok) {\n      setError(json.error);\n      setEmptyFields(json.emptyFields);\n    }\n    if (response.ok) {\n      setName('');\n      setCategory('');\n      setSupplier('');\n      setDescription('');\n      setQuantity('');\n      setReOrderLevel('');\n      setPrice('');\n      setError(null);\n      setEmptyFields([]);\n      console.log('new product added', json);\n      dispatch({ type: 'CREATE_PRODUCT', payload: json });\n\n      // Redirect to the home page\n      navigate('/');\n    }\n  }\n\n\n  return (\n    <div className='form-container'>\n      <form className=\"format\" onSubmit={handleSubmit}>\n        <h3>Add a new Product</h3>\n\n        <label>Product Name :</label>\n        <input\n          type='text'\n          onChange={(e) => setName(e.target.value)}\n          value={name}\n          className={emptyFields.includes('name') ? 'error' : ''}\n        />\n\n        <label>Category :</label>\n        <input\n          type='text'\n          onChange={(e) => setCategory(e.target.value)}\n          value={category}\n          className={emptyFields.includes('category') ? 'error' : ''}\n        />\n\n        <label>Supplier :</label>\n        <input\n          type='text'\n          onChange={(e) => setSupplier(e.target.value)}\n          value={supplier}\n          className={emptyFields.includes('supplier') ? 'error' : ''}\n        />\n{/* \n        <label>Supplier:</label>\n        <select\n          value={supplier}\n          onChange={(e) => setSupplier(e.target.value)}\n          className={emptyFields.includes('supplier') ? 'error' : ''}\n        >\n          <option value=\"\">Select Supplier</option>\n          {suppliersList.map((supplierName) => (\n            <option key={supplierName} value={supplierName}>\n              {supplierName}\n            </option>\n          ))}\n        </select> */}\n\n        <label>Description :</label>\n        <input\n          type='text'\n          onChange={(e) => setDescription(e.target.value)}\n          value={description}\n          className={emptyFields.includes('description') ? 'error' : ''}\n        />\n\n        <label>Quantity:</label>\n        <input\n          type='number'\n          onChange={(e) => setQuantity(e.target.value)}\n          value={quantity}\n          className={emptyFields.includes('quantity') ? 'error' : ''}\n        />\n\n        <label>Re-OrderLevel:</label>\n        <input\n          type='number'\n          onChange={(e) => setReOrderLevel(e.target.value)}\n          value={reOrderLevel}\n          className={emptyFields.includes('reOrderLevel') ? 'error' : ''}\n        />\n\n        <label>Price:</label>\n        <input\n          type='number'\n          onChange={(e) => setPrice(e.target.value)}\n          value={price}\n          className={emptyFields.includes('price') ? 'error' : ''}\n        />\n\n        <button>Add Product</button>\n        {error && <div className=\"error\">{error}</div>}\n      </form>\n\n\n\n\n\n    </div>\n\n    \n\n  )\n}\n\nexport default ProductForm"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}