{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  items: [],\n  productDetail: {},\n  loading: false\n};\nexport const productFetch = createAsyncThunk(\"products/\", async () => {\n  const data = await axios.get(\"http://localhost:8000/api/products/\");\n  return data.data;\n});\nexport const productDetailFetch = createAsyncThunk(\"products/:id\", async id => {\n  const data = await axios.get(`http://localhost:8000/api/products/${id}`);\n  return data.data;\n});\nconst productSlice = createSlice({\n  name: \"products\",\n  initialState,\n  reducers: {\n    removeProductDetail: state => {\n      state.productDetail = {};\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(productFetch.pending, state => {\n      state.loading = true;\n    }).addCase(productFetch.fulfilled, (state, action) => {\n      state.loading = false;\n      state.items = action.payload;\n    }).addCase(productFetch.rejected, state => {\n      state.loading = false;\n    }).addCase(productDetailFetch.pending, state => {\n      state.loading = true;\n    }).addCase(productDetailFetch.fulfilled, (state, action) => {\n      state.loading = false;\n      state.productDetail = action.payload;\n    }).addCase(productDetailFetch.rejected, state => {\n      state.loading = false;\n    });\n  }\n});\nexport default productSlice.reducer;\nexport const getAllProducts = state => state.products.items;\nexport const getProductDetail = state => state.products.productDetail;\nexport const getLoading = state => state.products.loading;\nexport const {\n  removeProductDetail\n} = productSlice.actions;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","items","productDetail","loading","productFetch","data","get","productDetailFetch","id","productSlice","name","reducers","removeProductDetail","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","reducer","getAllProducts","products","getProductDetail","getLoading","actions"],"sources":["/Users/mohamedfadhil/InventoryFadhil/frontend/src/features/slice/productsSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst initialState = {\n    items: [],\n    productDetail: {},\n    loading: false\n}\n\nexport const productFetch = createAsyncThunk(\"products/\",\n    async () => {\n        const data = await axios.get(\"http://localhost:8000/api/products/\");\n        return data.data\n    }\n) \n\nexport const productDetailFetch = createAsyncThunk(\"products/:id\",\n    async (id) => {\n        const data = await axios.get(`http://localhost:8000/api/products/${id}`);\n        return data.data\n    }\n) \n\nconst productSlice = createSlice({\n    name: \"products\",\n    initialState,\n    reducers: {\n        removeProductDetail: (state) => {\n            state.productDetail = {}\n        }\n    },\n    extraReducers: (builder) => {\n        builder.addCase(productFetch.pending, (state) => {\n            state.loading = true\n        })\n        .addCase(productFetch.fulfilled, (state, action) => {\n            state.loading = false\n            state.items = action.payload\n        })\n        .addCase(productFetch.rejected, (state) => {\n            state.loading = false\n        })\n        .addCase(productDetailFetch.pending, (state) => {\n            state.loading = true\n        })\n        .addCase(productDetailFetch.fulfilled, (state, action) => {\n            state.loading = false\n            state.productDetail = action.payload\n        })\n        .addCase(productDetailFetch.rejected, (state) => {\n            state.loading = false\n        })\n    }\n})\n\nexport default productSlice.reducer\nexport const getAllProducts = (state) => state.products.items\nexport const getProductDetail = (state) => state.products.productDetail\nexport const getLoading = (state) => state.products.loading\nexport const { removeProductDetail } = productSlice.actions"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAE,EAAE;EACTC,aAAa,EAAE,CAAC,CAAC;EACjBC,OAAO,EAAE;AACb,CAAC;AAED,OAAO,MAAMC,YAAY,GAAGN,gBAAgB,CAAC,WAAW,EACpD,YAAY;EACR,MAAMO,IAAI,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAC,qCAAqC,CAAC;EACnE,OAAOD,IAAI,CAACA,IAAI;AACpB,CACJ,CAAC;AAED,OAAO,MAAME,kBAAkB,GAAGT,gBAAgB,CAAC,cAAc,EAC7D,MAAOU,EAAE,IAAK;EACV,MAAMH,IAAI,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAE,sCAAqCE,EAAG,EAAC,CAAC;EACxE,OAAOH,IAAI,CAACA,IAAI;AACpB,CACJ,CAAC;AAED,MAAMI,YAAY,GAAGZ,WAAW,CAAC;EAC7Ba,IAAI,EAAE,UAAU;EAChBV,YAAY;EACZW,QAAQ,EAAE;IACNC,mBAAmB,EAAGC,KAAK,IAAK;MAC5BA,KAAK,CAACX,aAAa,GAAG,CAAC,CAAC;IAC5B;EACJ,CAAC;EACDY,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CAACC,OAAO,CAACZ,YAAY,CAACa,OAAO,EAAGJ,KAAK,IAAK;MAC7CA,KAAK,CAACV,OAAO,GAAG,IAAI;IACxB,CAAC,CAAC,CACDa,OAAO,CAACZ,YAAY,CAACc,SAAS,EAAE,CAACL,KAAK,EAAEM,MAAM,KAAK;MAChDN,KAAK,CAACV,OAAO,GAAG,KAAK;MACrBU,KAAK,CAACZ,KAAK,GAAGkB,MAAM,CAACC,OAAO;IAChC,CAAC,CAAC,CACDJ,OAAO,CAACZ,YAAY,CAACiB,QAAQ,EAAGR,KAAK,IAAK;MACvCA,KAAK,CAACV,OAAO,GAAG,KAAK;IACzB,CAAC,CAAC,CACDa,OAAO,CAACT,kBAAkB,CAACU,OAAO,EAAGJ,KAAK,IAAK;MAC5CA,KAAK,CAACV,OAAO,GAAG,IAAI;IACxB,CAAC,CAAC,CACDa,OAAO,CAACT,kBAAkB,CAACW,SAAS,EAAE,CAACL,KAAK,EAAEM,MAAM,KAAK;MACtDN,KAAK,CAACV,OAAO,GAAG,KAAK;MACrBU,KAAK,CAACX,aAAa,GAAGiB,MAAM,CAACC,OAAO;IACxC,CAAC,CAAC,CACDJ,OAAO,CAACT,kBAAkB,CAACc,QAAQ,EAAGR,KAAK,IAAK;MAC7CA,KAAK,CAACV,OAAO,GAAG,KAAK;IACzB,CAAC,CAAC;EACN;AACJ,CAAC,CAAC;AAEF,eAAeM,YAAY,CAACa,OAAO;AACnC,OAAO,MAAMC,cAAc,GAAIV,KAAK,IAAKA,KAAK,CAACW,QAAQ,CAACvB,KAAK;AAC7D,OAAO,MAAMwB,gBAAgB,GAAIZ,KAAK,IAAKA,KAAK,CAACW,QAAQ,CAACtB,aAAa;AACvE,OAAO,MAAMwB,UAAU,GAAIb,KAAK,IAAKA,KAAK,CAACW,QAAQ,CAACrB,OAAO;AAC3D,OAAO,MAAM;EAAES;AAAoB,CAAC,GAAGH,YAAY,CAACkB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}