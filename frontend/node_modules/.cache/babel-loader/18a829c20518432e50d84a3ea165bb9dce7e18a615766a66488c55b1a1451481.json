{"ast":null,"code":"var _jsxFileName = \"/Users/mohamedfadhil/mernProject/frontend/src/components/ProductForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useProductsContext } from \"../hooks/useProductsContext\";\nimport { useNavigate } from \"react-router-dom\";\n\n// import { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductForm = () => {\n  _s();\n  const {\n    dispatch\n  } = useProductsContext();\n  const navigate = useNavigate(); // Hook for programmatic navigation\n\n  const [name, setName] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [supplier, setSupplier] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [quantity, setQuantity] = useState(\"\");\n  const [reOrderLevel, setReOrderLevel] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n\n  //for error checking\n  const [error, setError] = useState({\n    name: \"\",\n    category: \"\",\n    supplier: \"\",\n    description: \"\",\n    quantity: \"\",\n    reOrderLevel: \"\",\n    price: \"\"\n  });\n  const [emptyFields, setEmptyFields] = useState([]);\n\n  // const [suppliersList, setSuppliersList] = useState([]);\n\n  // useEffect(() => {\n  //   // Fetch the list of suppliers from your API\n  //   const fetchSuppliers = async () => {\n  //     try {\n  //       const response = await fetch('/api/suppliers');                      //when supplier data is added\n  //       const data = await response.json();\n\n  //       if (response.ok) {\n  //         // Extract the list of supplier names\n  //         const supplierNames = data.map((supplier) => supplier.name);\n  //         setSuppliersList(supplierNames);\n  //       } else {\n  //         console.error('Failed to fetch suppliers');\n  //       }\n  //     } catch (error) {\n  //       console.error('Error fetching suppliers:', error);\n  //     }\n  //   };\n\n  //   fetchSuppliers();\n  // }, []);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const newErrors = {}; // Temporary object to store errors\n\n    if (!name) {\n      newErrors.name = \"Name cannot be empty.\";\n    } else if (!/^[a-zA-Z][a-zA-Z0-9\\s]*$/.test(name)) {\n      newErrors.name = \"Name must start with a letter and cannot contain symbols\";\n    } else if (name.length <= 2) {\n      newErrors.name = \"Name must be greater than 2 letters.\";\n    }\n    if (!description) {\n      newErrors.description = \"Description cannot be empty.\";\n    } else if (!/^[a-zA-Z][a-zA-Z0-9\\s-_]*$/.test(description)) {\n      newErrors.description = \"description must start with a letter and cannot contain symbols\";\n    }\n    if (!category) {\n      newErrors.category = \"Category name cannot be empty.\";\n    } else if (!/^[a-zA-Z0-9][a-zA-Z0-9\\s]*$/.test(category)) {\n      newErrors.category = \"Category cannot contain symbols\";\n    }\n    if (!supplier) {\n      newErrors.supplier = \"Supplier name cannot be empty.\";\n    } else if (!/^[a-zA-Z0-9][a-zA-Z0-9\\s-_]*$/.test(supplier)) {\n      newErrors.supplier = \"Supplier name cannot contain symbols \";\n    }\n    const quantityVal = parseInt(quantity);\n    if (!quantity) {\n      newErrors.quantity = \"Quantity field cannot be empty.\";\n    } else if (quantityVal <= 0) {\n      newErrors.quantity = \"Quantity must be a valid number greater than 0\";\n    }\n    const reOrderLevelValue = parseFloat(reOrderLevel);\n    if (reOrderLevelValue <= 0 || reOrderLevelValue >= parseFloat(quantity)) {\n      newErrors.reOrderLevel = \"Re-Order Level must be a valid number greater than 0 and less than Quantity.\";\n    }\n    const priceVal = parseFloat(price);\n    if (!price) {\n      newErrors.price = \"Price field cannot be empty.\";\n    } else if (priceVal <= 0) {\n      newErrors.price = \"Price must be a valid number greater than 0\";\n    }\n    if (Object.keys(newErrors).length > 0) {\n      // If there are errors, update the error state and return\n      setError(newErrors);\n      return;\n    }\n\n    // Clear errors for valid inputs\n    setError({});\n    const product = {\n      name,\n      category,\n      supplier,\n      description,\n      quantity,\n      reOrderLevel,\n      price\n    };\n    const response = await fetch(\"/api/products\", {\n      method: \"POST\",\n      body: JSON.stringify(product),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      setError({\n        error: json.error\n      });\n      setEmptyFields(json.emptyFields);\n    }\n    if (response.ok) {\n      setName(\"\");\n      setCategory(\"\");\n      setSupplier(\"\");\n      setDescription(\"\");\n      setQuantity(\"\");\n      setReOrderLevel(\"\");\n      setPrice(\"\");\n      setError(null);\n      setEmptyFields([]);\n      console.log(\"new product added\", json);\n      dispatch({\n        type: \"CREATE_PRODUCT\",\n        payload: json\n      });\n\n      // Redirect to the home page\n      navigate(\"/\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"format\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add a new Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Product Name :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: e => setName(e.target.value),\n            value: name,\n            className: emptyFields.includes(\"name\") || error && error.name ? \"error\" : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 11\n          }, this), error.name && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error\",\n            children: error.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Category :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: e => setCategory(e.target.value),\n            value: category,\n            className: emptyFields.includes(\"category\") || error && error.category ? \"error\" : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 11\n          }, this), error.category && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error\",\n            children: error.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Description :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: e => setDescription(e.target.value),\n            value: description,\n            className: emptyFields.includes(\"description\") || error && error.description ? \"error\" : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 11\n          }, this), error.description && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error\",\n            children: error.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Supplier :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: e => setSupplier(e.target.value),\n            value: supplier,\n            className: emptyFields.includes(\"supplier\") || error && error.supplier ? \"error\" : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 11\n          }, this), error.supplier && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error\",\n            children: error.supplier\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Quantity:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            onChange: e => setQuantity(e.target.value),\n            value: quantity,\n            className: emptyFields.includes(\"quantity\") || error && error.quantity ? \"error\" : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 11\n          }, this), error.quantity && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error\",\n            children: error.quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Re-OrderLevel:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            onChange: e => setReOrderLevel(e.target.value),\n            value: reOrderLevel,\n            className: emptyFields.includes(\"reOrderLevel\") || error && error.reOrderLevel ? \"error\" : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 11\n          }, this), error.reOrderLevel && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error\",\n            children: error.reOrderLevel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 34\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Price:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            onChange: e => setPrice(e.target.value),\n            value: price,\n            className: emptyFields.includes(\"price\") || error && error.price ? \"error\" : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 11\n          }, this), error.price && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error\",\n            children: error.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 3\n  }, this);\n};\n_s(ProductForm, \"suixQBTiF4/7EPIa9p0+1AdrvCc=\", false, function () {\n  return [useProductsContext, useNavigate];\n});\n_c = ProductForm;\nexport default ProductForm;\nvar _c;\n$RefreshReg$(_c, \"ProductForm\");","map":{"version":3,"names":["useState","useProductsContext","useNavigate","jsxDEV","_jsxDEV","ProductForm","_s","dispatch","navigate","name","setName","category","setCategory","supplier","setSupplier","description","setDescription","quantity","setQuantity","reOrderLevel","setReOrderLevel","price","setPrice","error","setError","emptyFields","setEmptyFields","handleSubmit","e","preventDefault","newErrors","test","length","quantityVal","parseInt","reOrderLevelValue","parseFloat","priceVal","Object","keys","product","response","fetch","method","body","JSON","stringify","headers","json","ok","console","log","type","payload","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","onChange","target","value","includes","_c","$RefreshReg$"],"sources":["/Users/mohamedfadhil/mernProject/frontend/src/components/ProductForm.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useProductsContext } from \"../hooks/useProductsContext\";\nimport { useNavigate } from \"react-router-dom\";\n\n// import { useEffect } from 'react';\n\nconst ProductForm = () => {\n  const { dispatch } = useProductsContext();\n  const navigate = useNavigate(); // Hook for programmatic navigation\n\n  const [name, setName] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [supplier, setSupplier] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [quantity, setQuantity] = useState(\"\");\n  const [reOrderLevel, setReOrderLevel] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n\n  //for error checking\n  const [error, setError] = useState({\n    name: \"\",\n    category: \"\",\n    supplier: \"\",\n    description: \"\",\n    quantity: \"\",\n    reOrderLevel: \"\",\n    price: \"\"\n  });\n\n  const [emptyFields, setEmptyFields] = useState([]);\n\n  // const [suppliersList, setSuppliersList] = useState([]);\n\n  // useEffect(() => {\n  //   // Fetch the list of suppliers from your API\n  //   const fetchSuppliers = async () => {\n  //     try {\n  //       const response = await fetch('/api/suppliers');                      //when supplier data is added\n  //       const data = await response.json();\n\n  //       if (response.ok) {\n  //         // Extract the list of supplier names\n  //         const supplierNames = data.map((supplier) => supplier.name);\n  //         setSuppliersList(supplierNames);\n  //       } else {\n  //         console.error('Failed to fetch suppliers');\n  //       }\n  //     } catch (error) {\n  //       console.error('Error fetching suppliers:', error);\n  //     }\n  //   };\n\n  //   fetchSuppliers();\n  // }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const newErrors = {}; // Temporary object to store errors\n    \n    if (!name) {\n      newErrors.name = \"Name cannot be empty.\";\n    } else if (!/^[a-zA-Z][a-zA-Z0-9\\s]*$/.test(name)) {\n        newErrors.name =\"Name must start with a letter and cannot contain symbols\"\n    }else if (name.length <= 2) {\n      newErrors.name = \"Name must be greater than 2 letters.\"\n    }\n\n    if (!description) {\n      newErrors.description = \"Description cannot be empty.\";\n    } else if (!/^[a-zA-Z][a-zA-Z0-9\\s-_]*$/.test(description)) {\n      newErrors.description =\"description must start with a letter and cannot contain symbols\"\n    }\n\n    if (!category) {\n      newErrors.category = \"Category name cannot be empty.\";\n    } else if (!/^[a-zA-Z0-9][a-zA-Z0-9\\s]*$/.test(category)){\n      newErrors.category = \"Category cannot contain symbols\"\n    }\n\n    if (!supplier) {\n      newErrors.supplier = \"Supplier name cannot be empty.\";\n    } else if (!/^[a-zA-Z0-9][a-zA-Z0-9\\s-_]*$/.test(supplier)) {\n      newErrors.supplier = \"Supplier name cannot contain symbols \";\n    }\n    \n\n    const quantityVal = parseInt(quantity);\n    if (!quantity) {\n      newErrors.quantity = \"Quantity field cannot be empty.\";\n    } else if (quantityVal <= 0) {\n      newErrors.quantity =\"Quantity must be a valid number greater than 0\"\n    }\n    const reOrderLevelValue = parseFloat(reOrderLevel);\n    if (reOrderLevelValue <= 0 || reOrderLevelValue >= parseFloat(quantity)) {\n      newErrors.reOrderLevel=  \"Re-Order Level must be a valid number greater than 0 and less than Quantity.\"\n    }\n    const priceVal = parseFloat(price);\n    if (!price) {\n      newErrors.price = \"Price field cannot be empty.\";\n    } else if (priceVal <= 0) {\n      newErrors.price =\"Price must be a valid number greater than 0\"\n    }\n\n\n    if (Object.keys(newErrors).length > 0) {\n      // If there are errors, update the error state and return\n      setError(newErrors);\n      return;\n    }\n\n    // Clear errors for valid inputs\n    setError({});\n\n    const product = {\n      name,\n      category,\n      supplier,\n      description,\n      quantity,\n      reOrderLevel,\n      price,\n    };\n\n    const response = await fetch(\"/api/products\", {\n      method: \"POST\",\n      body: JSON.stringify(product),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    const json = await response.json();\n\n    if (!response.ok) {\n      setError({ error: json.error });\n      setEmptyFields(json.emptyFields);\n    }\n    if (response.ok) {\n      setName(\"\");\n      setCategory(\"\");\n      setSupplier(\"\");\n      setDescription(\"\");\n      setQuantity(\"\");\n      setReOrderLevel(\"\");\n      setPrice(\"\");\n      setError(null);\n      setEmptyFields([]);\n      console.log(\"new product added\", json);\n      dispatch({ type: \"CREATE_PRODUCT\", payload: json });\n\n      // Redirect to the home page\n      navigate(\"/\");\n    }\n  };\n\n  return (\n  <div className=\"form-container\">\n    <form className=\"format\" onSubmit={handleSubmit}>\n      <h3>Add a new Product</h3>\n\n      <div className=\"form-row\">\n        <div className=\"form-column\">\n\n          <label>Product Name :</label>\n          <input\n            type=\"text\"\n            onChange={(e) => setName(e.target.value)}\n            value={name}\n            className={emptyFields.includes(\"name\") || (error && error.name) ? \"error\" : \"\"}\n          />\n          {error.name && <span className=\"error\">{error.name}</span>}\n\n\n          <label>Category :</label>\n          <input\n            type=\"text\"\n            onChange={(e) => setCategory(e.target.value)}\n            value={category}\n            className={emptyFields.includes(\"category\") || (error && error.category) ? \"error\" : \"\"}\n          />\n  {error.category && <span className=\"error\">{error.category}</span>}\n\n          <label>Description :</label>\n          <input\n            type=\"text\"\n            onChange={(e) => setDescription(e.target.value)}\n            value={description}\n            className={emptyFields.includes(\"description\") || (error && error.description) ? \"error\" : \"\"}\n          />\n          {error.description && <span className=\"error\">{error.description}</span>}\n\n        </div>\n\n        <div className=\"form-column\">\n          <label>Supplier :</label>\n          <input\n            type=\"text\"\n            onChange={(e) => setSupplier(e.target.value)}\n            value={supplier}\n            className={emptyFields.includes(\"supplier\") || (error && error.supplier) ? \"error\" : \"\"}\n          />\n  {error.supplier && <span className=\"error\">{error.supplier}</span>}\n          <label>Quantity:</label>\n          <input\n            type=\"number\"\n            onChange={(e) => setQuantity(e.target.value)}\n            value={quantity}\n            className={\n              emptyFields.includes(\"quantity\") || (error && error.quantity) ? \"error\" : \"\"\n            }\n          />\n          {error.quantity && <span className=\"error\">{error.quantity}</span>}\n\n          <label>Re-OrderLevel:</label>\n          <input\n            type=\"number\"\n            onChange={(e) => setReOrderLevel(e.target.value)}\n            value={reOrderLevel}\n            className={emptyFields.includes(\"reOrderLevel\") || (error && error.reOrderLevel) ? \"error\" : \"\"}\n          />\n          {error.reOrderLevel && <span className=\"error\">{error.reOrderLevel}</span>}\n\n          <label>Price:</label>\n          <input\n            type=\"number\"\n            onChange={(e) => setPrice(e.target.value)}\n            value={price}\n            className={emptyFields.includes(\"price\") || (error && error.price) ? \"error\" : \"\"}\n          />\n          {error.price && <span className=\"error\">{error.price}</span>}\n\n        </div>\n      </div>\n\n      <button>Add Product</button>\n    </form>\n  </div>\n  );\n};\n\nexport default ProductForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}