{"ast":null,"code":"var _jsxFileName = \"/Users/mohamedfadhil/mernProject/frontend/src/components/ProductForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useProductsContext } from \"../hooks/useProductsContext\";\nimport { useNavigate } from \"react-router-dom\";\n\n// import { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductForm = () => {\n  _s();\n  const {\n    dispatch\n  } = useProductsContext();\n  const navigate = useNavigate(); // Hook for programmatic navigation\n\n  const [name, setName] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [supplier, setSupplier] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [quantity, setQuantity] = useState(\"\");\n  const [reOrderLevel, setReOrderLevel] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n\n  //for error checking\n  const [error, setError] = useState({\n    name: \"\",\n    category: \"\",\n    supplier: \"\",\n    description: \"\",\n    quantity: \"\",\n    reOrderLevel: \"\",\n    price: \"\"\n  });\n  const [emptyFields, setEmptyFields] = useState([]);\n\n  // const [suppliersList, setSuppliersList] = useState([]);\n\n  // useEffect(() => {\n  //   // Fetch the list of suppliers from your API\n  //   const fetchSuppliers = async () => {\n  //     try {\n  //       const response = await fetch('/api/suppliers');                      //when supplier data is added\n  //       const data = await response.json();\n\n  //       if (response.ok) {\n  //         // Extract the list of supplier names\n  //         const supplierNames = data.map((supplier) => supplier.name);\n  //         setSuppliersList(supplierNames);\n  //       } else {\n  //         console.error('Failed to fetch suppliers');\n  //       }\n  //     } catch (error) {\n  //       console.error('Error fetching suppliers:', error);\n  //     }\n  //   };\n\n  //   fetchSuppliers();\n  // }, []);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const newErrors = {}; // Temporary object to store errors\n    // validations\n    // name\n    if (!name) {\n      newErrors.name = \"Name cannot be empty.\";\n    } else if (!/^[a-zA-Z][a-zA-Z\\s]*$/.test(name)) {\n      newErrors.name = \"Name cannot contain numbers or symbols\";\n    } else if (name.length <= 2) {\n      newErrors.name = \"Name must be greater than 2 letters.\";\n    }\n    // description\n    if (!description) {\n      newErrors.description = \"Description cannot be empty.\";\n    } else if (!/^[a-zA-Z][a-zA-Z0-9\\s-_]*$/.test(description)) {\n      newErrors.description = \"description must start with a letter and cannot contain symbols\";\n    }\n    // category\n    if (!category) {\n      newErrors.category = \"Category name cannot be empty.\";\n    } else if (!/^[a-zA-Z0-9][a-zA-Z0-9\\s]*$/.test(category)) {\n      newErrors.category = \"Category cannot contain symbols\";\n    }\n    // supplier\n    if (!supplier) {\n      newErrors.supplier = \"Supplier name cannot be empty.\";\n    } else if (!/^[a-zA-Z0-9][a-zA-Z\\s-_]*$/.test(supplier)) {\n      newErrors.supplier = \"Supplier name cannot contain symbols \";\n    }\n    // quantity\n    const quantityVal = parseInt(quantity);\n    if (!quantity) {\n      newErrors.quantity = \"Quantity field cannot be empty.\";\n    } else if (quantityVal <= 0) {\n      newErrors.quantity = \"Quantity must be a valid number greater than 0\";\n    }\n    // reOrderLevel\n    const reOrderLevelValue = parseFloat(reOrderLevel);\n    if (reOrderLevelValue <= 0 || reOrderLevelValue >= parseFloat(quantity)) {\n      newErrors.reOrderLevel = \"Re-Order Level must be a valid number greater than 0 and less than Quantity.\";\n    }\n    // price\n    const priceVal = parseFloat(price);\n    if (!price) {\n      newErrors.price = \"Price field cannot be empty.\";\n    } else if (priceVal <= 0) {\n      newErrors.price = \"Price must be a valid number greater than 0\";\n    }\n    if (Object.keys(newErrors).length > 0) {\n      // If there are errors, update the error state and return\n      setError(newErrors);\n      return;\n    }\n\n    // Clear errors for valid inputs\n    setError({});\n    const product = {\n      name,\n      category,\n      supplier,\n      description,\n      quantity,\n      reOrderLevel,\n      price\n    };\n    const response = await fetch(\"/api/products\", {\n      method: \"POST\",\n      body: JSON.stringify(product),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      setError({\n        error: json.error\n      });\n      setEmptyFields(json.emptyFields);\n    }\n    if (response.ok) {\n      setName(\"\");\n      setCategory(\"\");\n      setSupplier(\"\");\n      setDescription(\"\");\n      setQuantity(\"\");\n      setReOrderLevel(\"\");\n      setPrice(\"\");\n      setError(null);\n      setEmptyFields([]);\n      console.log(\"new product added\", json);\n      dispatch({\n        type: \"CREATE_PRODUCT\",\n        payload: json\n      });\n\n      // Redirect to the home page\n      navigate(\"/\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"format\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        class: \"mb-2 mt-0 text-3xl font-medium leading-tight text-primary\",\n        children: \"Add New Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            class: \"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\",\n            for: \"grid-first-name\",\n            children: \"Product Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: e => setName(e.target.value),\n            value: name,\n            className: emptyFields.includes(\"name\") || error && error.name ? \"error\" : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this), error.name && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error\",\n            children: error.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            class: \"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\",\n            for: \"grid-first-name\",\n            children: \"Supplier:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: e => setSupplier(e.target.value),\n            value: supplier,\n            className: emptyFields.includes(\"supplier\") || error && error.supplier ? \"error\" : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), error.supplier && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error\",\n            children: error.supplier\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 32\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            class: \"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\",\n            for: \"grid-first-name\",\n            children: \"Category:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: e => setCategory(e.target.value),\n            value: category,\n            className: emptyFields.includes(\"category\") || error && error.category ? \"error\" : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), error.category && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error\",\n            children: error.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            class: \"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\",\n            for: \"grid-first-name\",\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: e => setDescription(e.target.value),\n            value: description,\n            className: emptyFields.includes(\"description\") || error && error.description ? \"error\" : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this), error.description && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error\",\n            children: error.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            class: \"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\",\n            for: \"grid-first-name\",\n            children: \"Quantity:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            onChange: e => setQuantity(e.target.value),\n            value: quantity,\n            className: emptyFields.includes(\"quantity\") || error && error.quantity ? \"error\" : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this), error.quantity && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error\",\n            children: error.quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 32\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            class: \"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\",\n            for: \"grid-first-name\",\n            children: \"Re-Order Level:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            onChange: e => setReOrderLevel(e.target.value),\n            value: reOrderLevel,\n            className: emptyFields.includes(\"reOrderLevel\") || error && error.reOrderLevel ? \"error\" : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this), error.reOrderLevel && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error\",\n            children: error.reOrderLevel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            class: \"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\",\n            for: \"grid-first-name\",\n            children: \"Price:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            onChange: e => setPrice(e.target.value),\n            value: price,\n            placeholder: \"Rs \",\n            className: emptyFields.includes(\"price\") || error && error.price ? \"error\" : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this), error.price && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error\",\n            children: error.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductForm, \"PUbr58mdmqa0/AU3RcUJhBmmFJ4=\", false, function () {\n  return [useProductsContext, useNavigate];\n});\n_c = ProductForm;\nexport default ProductForm;\nvar _c;\n$RefreshReg$(_c, \"ProductForm\");","map":{"version":3,"names":["useState","useProductsContext","useNavigate","jsxDEV","_jsxDEV","ProductForm","_s","dispatch","navigate","name","setName","category","setCategory","supplier","setSupplier","description","setDescription","quantity","setQuantity","reOrderLevel","setReOrderLevel","price","setPrice","error","setError","emptyFields","setEmptyFields","handleSubmit","e","preventDefault","newErrors","test","length","quantityVal","parseInt","reOrderLevelValue","parseFloat","priceVal","Object","keys","product","response","fetch","method","body","JSON","stringify","headers","json","ok","console","log","type","payload","className","children","onSubmit","class","fileName","_jsxFileName","lineNumber","columnNumber","for","onChange","target","value","includes","placeholder","_c","$RefreshReg$"],"sources":["/Users/mohamedfadhil/mernProject/frontend/src/components/ProductForm.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useProductsContext } from \"../hooks/useProductsContext\";\nimport { useNavigate } from \"react-router-dom\";\n\n// import { useEffect } from 'react';\n\nconst ProductForm = () => {\n  const { dispatch } = useProductsContext();\n  const navigate = useNavigate(); // Hook for programmatic navigation\n\n  const [name, setName] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [supplier, setSupplier] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [quantity, setQuantity] = useState(\"\");\n  const [reOrderLevel, setReOrderLevel] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n\n  //for error checking\n  const [error, setError] = useState({\n    name: \"\",\n    category: \"\",\n    supplier: \"\",\n    description: \"\",\n    quantity: \"\",\n    reOrderLevel: \"\",\n    price: \"\",\n  });\n\n  const [emptyFields, setEmptyFields] = useState([]);\n\n  // const [suppliersList, setSuppliersList] = useState([]);\n\n  // useEffect(() => {\n  //   // Fetch the list of suppliers from your API\n  //   const fetchSuppliers = async () => {\n  //     try {\n  //       const response = await fetch('/api/suppliers');                      //when supplier data is added\n  //       const data = await response.json();\n\n  //       if (response.ok) {\n  //         // Extract the list of supplier names\n  //         const supplierNames = data.map((supplier) => supplier.name);\n  //         setSuppliersList(supplierNames);\n  //       } else {\n  //         console.error('Failed to fetch suppliers');\n  //       }\n  //     } catch (error) {\n  //       console.error('Error fetching suppliers:', error);\n  //     }\n  //   };\n\n  //   fetchSuppliers();\n  // }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const newErrors = {}; // Temporary object to store errors\n// validations\n// name\n    if (!name) {\n      newErrors.name = \"Name cannot be empty.\";\n    } else if (!/^[a-zA-Z][a-zA-Z\\s]*$/.test(name)) {\n      newErrors.name =\n        \"Name cannot contain numbers or symbols\";\n    } else if (name.length <= 2) {\n      newErrors.name = \"Name must be greater than 2 letters.\";\n    }\n// description\n    if (!description) {\n      newErrors.description = \"Description cannot be empty.\";\n    } else if (!/^[a-zA-Z][a-zA-Z0-9\\s-_]*$/.test(description)) {\n      newErrors.description =\n        \"description must start with a letter and cannot contain symbols\";\n    }\n// category\n    if (!category) {\n      newErrors.category = \"Category name cannot be empty.\";\n    } else if (!/^[a-zA-Z0-9][a-zA-Z0-9\\s]*$/.test(category)) {\n      newErrors.category = \"Category cannot contain symbols\";\n    }\n// supplier\n    if (!supplier) {\n      newErrors.supplier = \"Supplier name cannot be empty.\";\n    } else if (!/^[a-zA-Z0-9][a-zA-Z\\s-_]*$/.test(supplier)) {\n      newErrors.supplier = \"Supplier name cannot contain symbols \";\n    }\n// quantity\n    const quantityVal = parseInt(quantity);\n    if (!quantity) {\n      newErrors.quantity = \"Quantity field cannot be empty.\";\n    } else if (quantityVal <= 0) {\n      newErrors.quantity = \"Quantity must be a valid number greater than 0\";\n    }\n// reOrderLevel\n    const reOrderLevelValue = parseFloat(reOrderLevel);\n    if (reOrderLevelValue <= 0 || reOrderLevelValue >= parseFloat(quantity)) {\n      newErrors.reOrderLevel =\n        \"Re-Order Level must be a valid number greater than 0 and less than Quantity.\";\n    }\n// price\n    const priceVal = parseFloat(price);\n    if (!price) {\n      newErrors.price = \"Price field cannot be empty.\";\n    } else if (priceVal <= 0) {\n      newErrors.price = \"Price must be a valid number greater than 0\";\n    }\n\n    if (Object.keys(newErrors).length > 0) {\n      // If there are errors, update the error state and return\n      setError(newErrors);\n      return;\n    }\n\n    // Clear errors for valid inputs\n    setError({});\n\n    const product = {\n      name,\n      category,\n      supplier,\n      description,\n      quantity,\n      reOrderLevel,\n      price,\n    };\n\n    const response = await fetch(\"/api/products\", {\n      method: \"POST\",\n      body: JSON.stringify(product),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    const json = await response.json();\n\n    if (!response.ok) {\n      setError({ error: json.error });\n      setEmptyFields(json.emptyFields);\n    }\n    if (response.ok) {\n      setName(\"\");\n      setCategory(\"\");\n      setSupplier(\"\");\n      setDescription(\"\");\n      setQuantity(\"\");\n      setReOrderLevel(\"\");\n      setPrice(\"\");\n      setError(null);\n      setEmptyFields([]);\n      console.log(\"new product added\", json);\n      dispatch({ type: \"CREATE_PRODUCT\", payload: json });\n\n      // Redirect to the home page\n      navigate(\"/\");\n    }\n  };\n\n  return (\n    <div className=\"form-container\">\n      <form className=\"format\" onSubmit={handleSubmit}>\n      <h3 class=\"mb-2 mt-0 text-3xl font-medium leading-tight text-primary\">\n  Add New Product\n</h3>\n\n        <div className=\"form-row\">\n          <div className=\"form-column\">\n            <label\n              class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\n              for=\"grid-first-name\"\n            >\n              Product Name:\n            </label>\n            <input\n              type=\"text\"\n              onChange={(e) => setName(e.target.value)}\n              value={name}\n              className={\n                emptyFields.includes(\"name\") || (error && error.name)\n                  ? \"error\"\n                  : \"\"\n              }\n            />\n            {error.name && <span className=\"error\">{error.name}</span>}\n          </div>\n          <div className=\"form-column\">\n            <label\n              class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\n              for=\"grid-first-name\"\n            >\n              Supplier:\n            </label>\n            <input\n              type=\"text\"\n              onChange={(e) => setSupplier(e.target.value)}\n              value={supplier}\n              className={\n                emptyFields.includes(\"supplier\") || (error && error.supplier)\n                  ? \"error\"\n                  : \"\"\n              }\n            />\n            {error.supplier && <span className=\"error\">{error.supplier}</span>}\n          </div>\n        </div>\n        <div className=\"form-row\">\n          <div className=\"form-column\">\n            <label\n              class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\n              for=\"grid-first-name\"\n            >\n              Category:\n            </label>\n            <input\n              type=\"text\"\n              onChange={(e) => setCategory(e.target.value)}\n              value={category}\n              className={\n                emptyFields.includes(\"category\") || (error && error.category)\n                  ? \"error\"\n                  : \"\"\n              }\n            />\n            {error.category && (\n              <span className=\"error\">{error.category}</span>\n            )}\n          </div>\n          <div className=\"form-column\">\n            <label\n              class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\n              for=\"grid-first-name\"\n            >\n              Description:\n            </label>\n            <input\n              type=\"text\"\n              onChange={(e) => setDescription(e.target.value)}\n              value={description}\n              className={\n                emptyFields.includes(\"description\") ||\n                  (error && error.description)\n                  ? \"error\"\n                  : \"\"\n              }\n            />\n            {error.description && (\n              <span className=\"error\">{error.description}</span>\n            )}\n          </div>\n        </div>\n\n\n        <div className=\"form-row\">\n          <div className=\"form-column\">\n            <label\n              class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\n              for=\"grid-first-name\"\n            >\n              Quantity:\n            </label>\n            <input\n              type=\"number\"\n              onChange={(e) => setQuantity(e.target.value)}\n              value={quantity}\n              className={\n                emptyFields.includes(\"quantity\") || (error && error.quantity)\n                  ? \"error\"\n                  : \"\"\n              }\n            />\n            {error.quantity && <span className=\"error\">{error.quantity}</span>}\n          </div>\n\n          <div className=\"form-column\">\n            <label\n              class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\n              for=\"grid-first-name\"\n            >\n              Re-Order Level:\n            </label>\n            <input\n              type=\"number\"\n              onChange={(e) => setReOrderLevel(e.target.value)}\n              value={reOrderLevel}\n              className={\n                emptyFields.includes(\"reOrderLevel\") ||\n                  (error && error.reOrderLevel)\n                  ? \"error\"\n                  : \"\"\n              }\n            />\n            {error.reOrderLevel && (\n              <span className=\"error\">{error.reOrderLevel}</span>\n            )}\n          </div>\n\n          <div className=\"form-column\">\n            <label\n              class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\n              for=\"grid-first-name\"\n            >\n              Price:\n            </label>\n            <input\n              type=\"number\"\n              onChange={(e) => setPrice(e.target.value)}\n              value={price}\n              placeholder=\"Rs \"\n              className={\n                emptyFields.includes(\"price\") || (error && error.price)\n                  ? \"error\"\n                  : \"\"\n              }\n            />\n            {error.price && <span className=\"error\">{error.price}</span>}\n          </div>\n        </div>\n\n        <button>Add Product</button>\n      </form>\n\n    </div>\n  );\n};\n\nexport default ProductForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}