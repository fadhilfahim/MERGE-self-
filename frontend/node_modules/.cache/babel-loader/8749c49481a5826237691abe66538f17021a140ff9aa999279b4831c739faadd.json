{"ast":null,"code":"var _jsxFileName = \"/Users/mohamedfadhil/mernProject/frontend/src/pages/UpdatePage.js\",\n  _s = $RefreshSig$();\n// import ProductForm from \"../components/ProductForm\"\n\n// const UpdatePage = () => {\n//     return(\n\n//         <div className=\"UpdatePage\">\n//             {<ProductForm />}\n//         </div>\n//     )\n// }\n\n// export default UpdatePage\n\nimport { useEffect, useState } from 'react';\nimport { useProductsContext } from '../hooks/useProductsContext';\nimport { useNavigate } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdatePage = () => {\n  _s();\n  const {\n    dispatch\n  } = useProductsContext();\n  const navigate = useNavigate(); // Hook for programmatic navigation\n  const {\n    id\n  } = useParams();\n  const [name, getName] = useState('');\n  const [category, getCategory] = useState('');\n  const [supplier, getSupplier] = useState('');\n  const [description, getDescription] = useState('');\n  const [quantity, getQuantity] = useState('');\n  const [reOrderLevel, getReOrderLevel] = useState('');\n  const [price, getPrice] = useState('');\n  const [error, setError] = useState(null);\n  const [emptyFields, setEmptyFields] = useState([]);\n  useEffect(() => {\n    fetch(`http://localhost:3065/use.put` + id).then(result => console.log(result)).catch(err => console.log(\"Error\", err));\n  });\n  const handleClickUpdate = async () => {\n    const updatedProduct = {\n      // Include the fields you want to update and their new values here\n      // For example:\n      // title: newTitle,\n      // load: newLoad,\n      // reps: newReps,\n      category: 'trying to update'\n    };\n    const response = await fetch('/api/products/' + product._id, {\n      method: 'PUT',\n      // You can use PUT or PATCH depending on your API's design.\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updatedProduct)\n    });\n    const json = await response.json();\n    if (response.ok) {\n      dispatch({\n        type: 'UPDATE_PRODUCT',\n        payload: json\n      });\n    }\n  };\n  //   const handleSubmit = async (e) => {\n  //     e.preventDefault();\n\n  //     const product = { name, category, supplier, description, quantity, reOrderLevel, price };\n\n  //     const response = await fetch('/api/products/:id', {\n  //       method: 'PUT',\n  //       body: JSON.stringify(product),\n  //       headers: {\n  //         'Content-Type': 'application/json',\n  //       },\n  //     });\n  //     const json = await response.json();\n\n  //     if (!response.ok) {\n  //       setError(json.error);\n  //       setEmptyFields(json.emptyFields);\n  //     }\n  //     if (response.ok) {\n  //       getName('');\n  //       getCategory('');\n  //       getSupplier('');\n  //       getDescription('');\n  //       getQuantity('');\n  //       getReOrderLevel('');\n  //       getPrice('');\n  //       setError(null);\n  //       setEmptyFields([]);\n  //       console.log('Product Updated', json);\n  //       dispatch({ type: 'UPDATE_PRODUCT', payload: json });\n\n  //       // Redirect to the home page\n  //       navigate('/');\n  //     }\n  //   }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"create\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add a new Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Product Name :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => getName(e.target.value),\n        value: name,\n        className: emptyFields.includes('name') ? 'error' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Category :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => getCategory(e.target.value),\n        value: category,\n        className: emptyFields.includes('category') ? 'error' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Supplier :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => getSupplier(e.target.value),\n        value: supplier,\n        className: emptyFields.includes('supplier') ? 'error' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Description :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => getDescription(e.target.value),\n        value: description,\n        className: emptyFields.includes('description') ? 'error' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Quantity:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        onChange: e => getQuantity(e.target.value),\n        value: quantity,\n        className: emptyFields.includes('quantity') ? 'error' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Re-OrderLevel:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        onChange: e => getReOrderLevel(e.target.value),\n        value: reOrderLevel,\n        className: emptyFields.includes('reOrderLevel') ? 'error' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Price:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        onChange: e => getPrice(e.target.value),\n        value: price,\n        className: emptyFields.includes('price') ? 'error' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n};\n_s(UpdatePage, \"CVm90GZgB3ScqmafDtgcTxB9OHU=\", false, function () {\n  return [useProductsContext, useNavigate, useParams];\n});\n_c = UpdatePage;\nexport default UpdatePage;\nvar _c;\n$RefreshReg$(_c, \"UpdatePage\");","map":{"version":3,"names":["useEffect","useState","useProductsContext","useNavigate","useParams","jsxDEV","_jsxDEV","UpdatePage","_s","dispatch","navigate","id","name","getName","category","getCategory","supplier","getSupplier","description","getDescription","quantity","getQuantity","reOrderLevel","getReOrderLevel","price","getPrice","error","setError","emptyFields","setEmptyFields","fetch","then","result","console","log","catch","err","handleClickUpdate","updatedProduct","response","product","_id","method","headers","body","JSON","stringify","json","ok","type","payload","className","children","onSubmit","handleSubmit","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","includes","_c","$RefreshReg$"],"sources":["/Users/mohamedfadhil/mernProject/frontend/src/pages/UpdatePage.js"],"sourcesContent":["// import ProductForm from \"../components/ProductForm\"\n\n// const UpdatePage = () => {\n//     return(\n\n//         <div className=\"UpdatePage\">\n//             {<ProductForm />}\n//         </div>\n//     )\n// }\n \n// export default UpdatePage\n\nimport { useEffect, useState } from 'react';\nimport { useProductsContext } from '../hooks/useProductsContext';\nimport { useNavigate } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\n\nconst UpdatePage = () => {\n  const { dispatch } = useProductsContext();\n  const navigate = useNavigate(); // Hook for programmatic navigation\n  const {id} = useParams()\n\n  const [name, getName] = useState('');\n  const [category, getCategory] = useState('');\n  const [supplier, getSupplier] = useState('');\n  const [description, getDescription] = useState('');\n  const [quantity, getQuantity] = useState('');\n  const [reOrderLevel, getReOrderLevel] = useState('');\n  const [price, getPrice] = useState('');\n  const [error, setError] = useState(null);\n  const [emptyFields, setEmptyFields] = useState([]);\n\n  useEffect(() => {\n    fetch(`http://localhost:3065/use.put`+id)\n    .then(result => console.log(result))\n    .catch((err)=> console.log(\"Error\", err));\n  })\n\n  const handleClickUpdate = async () => {\n    const updatedProduct = {\n        // Include the fields you want to update and their new values here\n        // For example:\n        // title: newTitle,\n        // load: newLoad,\n        // reps: newReps,\n        category: 'trying to update',\n    };\n    const response = await fetch('/api/products/' + product._id, {\n        method: 'PUT', // You can use PUT or PATCH depending on your API's design.\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(updatedProduct),\n    });\n\n    const json = await response.json();\n    if (response.ok) {\n        dispatch({ type: 'UPDATE_PRODUCT', payload: json });\n    }\n  };\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     const product = { name, category, supplier, description, quantity, reOrderLevel, price };\n\n//     const response = await fetch('/api/products/:id', {\n//       method: 'PUT',\n//       body: JSON.stringify(product),\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//     });\n//     const json = await response.json();\n\n//     if (!response.ok) {\n//       setError(json.error);\n//       setEmptyFields(json.emptyFields);\n//     }\n//     if (response.ok) {\n//       getName('');\n//       getCategory('');\n//       getSupplier('');\n//       getDescription('');\n//       getQuantity('');\n//       getReOrderLevel('');\n//       getPrice('');\n//       setError(null);\n//       setEmptyFields([]);\n//       console.log('Product Updated', json);\n//       dispatch({ type: 'UPDATE_PRODUCT', payload: json });\n\n//       // Redirect to the home page\n//       navigate('/');\n//     }\n//   }\n\n\n    return (\n        <div className=\"home\">\n        <form className=\"create\" onSubmit={handleSubmit}>\n            <h3>Add a new Product</h3>\n\n            <label>Product Name :</label>\n            <input\n                type='text'\n                onChange={(e) => getName(e.target.value)}\n                value={name}\n                className={emptyFields.includes('name') ? 'error' : ''}\n            />\n\n            <label>Category :</label>\n            <input\n                type='text'\n                onChange={(e) => getCategory(e.target.value)}\n                value={category}\n                className={emptyFields.includes('category') ? 'error' : ''}\n            />\n\n            <label>Supplier :</label>\n            <input\n                type='text'\n                onChange={(e) => getSupplier(e.target.value)}\n                value={supplier}\n                className={emptyFields.includes('supplier') ? 'error' : ''}\n            />\n\n            <label>Description :</label>\n            <input\n                type='text'\n                onChange={(e) => getDescription(e.target.value)}\n                value={description}\n                className={emptyFields.includes('description') ? 'error' : ''}\n            />\n\n            <label>Quantity:</label>\n            <input\n                type='number'\n                onChange={(e) => getQuantity(e.target.value)}\n                value={quantity}\n                className={emptyFields.includes('quantity') ? 'error' : ''}\n            /> \n\n            <label>Re-OrderLevel:</label>\n            <input\n                type='number'\n                onChange={(e) => getReOrderLevel(e.target.value)}\n                value={reOrderLevel}\n                className={emptyFields.includes('reOrderLevel') ? 'error' : ''}\n            /> \n            \n            <label>Price:</label>\n            <input\n                type='number'\n                onChange={(e) => getPrice(e.target.value)}\n                value={price} \n                className={emptyFields.includes('price') ? 'error' : ''}\n            />\n\n            <button>Add Product</button>\n            {error && <div className=\"error\">{error}</div>}\n        </form>\n        </div>\n    )\n}\n\nexport default UpdatePage"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}